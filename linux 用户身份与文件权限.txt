	Linux 是一个多用户、多任务的操作系统，具有很好的稳定性与安全性，在幕后保障 Linux
系统安全的则是一系列复杂的配置工作。本章将详细讲解文件的所有者、所属组以及其他人
可对文件进行的读（r）、写（w）、执行（x）等操作，以及如何在 Linux 系统中添加、删除、
修改用户账户信息。我们还可以使用 SUID、 SGID 与 SBIT 特殊权限更加灵活地设置系统权
限功能，来弥补对文件设置一般操作权限时所带来的不足。隐藏权限能够给系统增加一层隐
形的防护层，让黑客最多只能查看关键日志信息，而不能进行修改或删除。而文件的访问控
制列表（Access Control List， ACL）可以进一步让单一用户、用户组对单一文件或目录进行特
殊的权限设置，让文件具有能满足工作需求的最小权限。本章最后还将讲解如何使用 su 命令
与 sudo 服务让普通用户具备管理员的权限，不仅可以满足日常的工作需求，还可以确保系统
的安全性。

1.0、用户身份与能力
		设计 Linux 系统的初衷之一就是为了满足多个用户同时工作的需求，因此 Linux 系统必
	须具备很好的安全性。第 1 章在安装 RHEL 7 操作系统时，特别要求设置 root 管理员密码，
	这个 root 管理员就是存在于所有类 UNIX 系统中的超级用户。它拥有最高的系统所有权，能
	够管理系统的各项功能，如添加/删除用户、启动/关闭服务进程、开启/禁用硬件设备等。虽然
	以 root 管理员的身份工作时不会受到系统的限制，但俗语讲“能力越大，责任就越大”，因此
	一旦使用这个高能的 root 管理员权限执行了错误的命令可能会直接毁掉整个系统。使用与否，
	确实需要好好权衡一下。
		在学习时是否要使用 root 管理员权限来控制整个系统呢？面对这个问题，网络上有很多文
	章建议以普通用户的身份来操作—这是一个更安全也更“无责任”的回答。今天，刘遄老师就
	要冒天下之大不韪给出自己的心得—强烈推荐大家在学习时使用 root 管理员权限！
	这种为 root 管理员正名的决绝态度在网络中应该还是很少见的，我之所以力荐 root 管理
	员权限，原因很简单。因为在 Linux 的学习过程中如果使用普通用户身份进行操作，则在配
	置服务之后出现错误时很难判断是系统自身的问题还是因为权限不足而导致的；这无疑会给
	大家的学习过程徒增坎坷。更何况我们的实验环境是使用 VMware 虚拟机软件搭建的，可以
	将安装好的系统设置为一次快照，这即便系统彻底崩溃了，您也可以在 5 秒钟的时间内快速
	还原出一台全新的系统，而不用担心数据丢失。
	总之，刘遄老师在培训时都推荐每位学生使用 root 管理员权限来学习 Linux 系统，等到
	工作时再根据生产环境决定使用哪个用户权限；这些仅与选择相关，而非技术性问题。
	另外，很多图书或培训机构的老师会讲到， Linux 系统中的管理员就是 root。这其实是错
	误的， Linux 系统的管理员之所以是 root，并不是因为它的名字叫 root，而是因为该用户的身
	份号码即 UID（User IDentification）的数值为 0。在 Linux 系统中， UID 就相当于我们的身份
	证号码一样具有唯一性，因此可通过用户的 UID 值来判断用户身份。在 RHEL 7 系统中，用
	户身份有下面这些。
			➢ 管理员 UID 为 0：系统的管理员用户。
			➢ 系统用户 UID 为 1～999： Linux 系统为了避免因某个服务程序出现漏洞而被黑客提
			权至整台服务器，默认服务程序会有独立的系统用户负责运行，进而有效控制被破坏
			范围。
			➢ 普通用户 UID 从 1000 开始：是由管理员创建的用于日常工作的用户。
			
		需要注意的是， UID 是不能冲突的，而且管理员创建的普通用户的 UID 默认是从 1000
	开始的（即使前面有闲置的号码）。
	为了方便管理属于同一组的用户， Linux 系统中还引入了用户组的概念。通过使用用
	户组号码（GID， Group IDentification），我们可以把多个用户加入到同一个组中，从而方
	便为组中的用户统一规划权限或指定任务。假设有一个公司中有多个部门，每个部门中又
	有很多员工。如果只想让员工访问本部门内的资源，则可以针对部门而非具体的员工来设
	置权限。例如，可以通过对技术部门设置权限，使得只有技术部门的员工可以访问公司的
	数据库信息等。
		另外，在 Linux 系统中创建每个用户时，将自动创建一个与其同名的基本用户组，而且
	这个基本用户组只有该用户一个人。如果该用户以后被归纳入其他用户组，则这个其他用户
	组称之为扩展用户组。一个用户只有一个基本用户组，但是可以有多个扩展用户组，从而满
	足日常的工作需要。
	
1.1、useradd 命令
		useradd 命令用于创建新的用户，格式为“useradd [选项] 用户名”。
	可以使用 useradd 命令创建用户账户。使用该命令创建用户账户时，默认的用户家目录会
	被存放在/home 目录中，默认的 Shell 解释器为/bin/bash，而且默认会创建一个与该用户同名
	的基本用户组。这些默认设置可以根据表 5-1 中的 useradd 命令参数自行修改。
			表 5-1 useradd 命令中的用户参数以及作用
		参数			作用	
		-d 			指定用户的家目录（默认为/home/username）
		-e 			账户的到期时间，格式为 YYYY-MM-DD.
		-u 			指定该用户的默认 UID
		-g 			指定一个初始的用户基本组（必须已存在）
		-G 			指定一个或多个扩展用户组
		-N 			不创建与用户同名的基本用户组
		-s 			指定该用户的默认 Shell 解释器
	下面我们创建一个普通用户并指定家目录的路径、用户的 UID 以及 Shell 解释器。在下
	面的命令中，请注意/sbin/nologin，它是终端解释器中的一员，与 Bash 解释器有着天壤之别。
	一旦用户的解释器被设置为 nologin，则代表该用户不能登录到系统中：
	[root@linuxprobe ~]# useradd -d /home/linux -u 8888 -s /sbin/nologin linuxprobe
	[root@linuxprobe ~]# id linuxprobe
	uid=8888(linuxprobe) gid=8888(linuxprobe) groups=8888(linuxprobe)
	
1.2、groupadd 命令
		groupadd 命令用于创建用户组，格式为“groupadd [选项] 群组名”。
	为了能够更加高效地指派系统中各个用户的权限，在工作中常常会把几个用户加入到同
	一个组里面，这样便可以针对一类用户统一安排权限。
		参数			作用
		-g：		指定新建工作组的id；
		-r：		创建系统工作组，系统工作组的组ID小于500；
		-K：		覆盖配置文件“/ect/login.defs”；
		-o：		允许添加组ID号不唯一的工作组。
	创建用户组的步骤非常简单，例如使用如下命令创建一个用户组 ronny：
	[root@linuxprobe ~]# groupadd ronny
	
1.3、usermod 命令
		usermod 命令用于修改用户的属性，格式为“usermod [选项] 用户名”。
	前文曾反复强调， Linux 系统中的一切都是文件，因此在系统中创建用户也就是修改配置
	文件的过程。用户的信息保存在/etc/passwd 文件中，可以直接用文本编辑器来修改其中的用
	户参数项目，也可以用 usermod 命令修改已经创建的用户信息，诸如用户的 UID、基本/扩展
	用户组、默认终端等。 usermod 命令的参数以及作用如表 5-2 所示。
			表 5-2 usermod 命令中的参数及作用
		参数   				作用
		-c 			填写用户账户的备注信息
		-d -m		参数-m 与参数-d 连用，可重新指定用户的家目录并自动把旧的数据转移过去
		-e 			账户的到期时间，格式为 YYYY-MM-DD
		-g 			变更所属用户组
		-G 			变更扩展用户组
		-L 			锁定用户禁止其登录系统
		-U 			解锁用户，允许其登录系统
		-s 			变更默认终端
		-u 			修改用户的 UID
	大家不要被这么多参数吓坏了。我们先来看一下账户 linuxprobe 的默认信息：
	[root@linuxprobe ~]# id linuxprobe
	uid=1000(linuxprobe) gid=1000(linuxprobe) groups=1000(linuxprobe)
	然后将用户 linuxprobe 加入到 root 用户组中，这样扩展组列表中则会出现 root 用户组的
	字样，而基本组不会受到影响：
	[root@linuxprobe ~]# usermod -G root linuxprobe
	[root@linuxprobe ~]# id linuxprobe
	uid=1000(linuxprobe) gid=1000(linuxprobe) groups=1000(linuxprobe),0(root)
	再来试试用-u 参数修改 linuxprobe 用户的 UID 号码值。除此之外，我们还可以用-g 参数
	修改用户的基本组 ID， 用-G 参数修改用户扩展组 ID。
	[root@linuxprobe ~]# usermod -u 8888 linuxprobe
	[root@linuxprobe ~]# id linuxprobe
	uid=8888(linuxprobe) gid=1000(linuxprobe) groups=1000(linuxprobe),0(root)
	
1.5、passwd 命令
		passwd 命令用于修改用户密码、过期时间、认证信息等，格式为“passwd [选项] [用户名]”。
	普通用户只能使用 passwd 命令修改自身的系统密码，而 root 管理员则有权限修改其他
	所有人的密码。更酷的是， root 管理员在 Linux 系统中修改自己或他人的密码时不需要验证旧
	密码，这一点特别方便。既然 root 管理员可以修改其他用户的密码，就表示完全拥有该用户
	的管理权限。 passwd 命令中可用的参数以及作用如表 5-3 所示。
		表 5-3 passwd 命令中的参数以及作用
		参数     		作用
		-l 			锁定用户，禁止其登录
		-u 			解除锁定，允许用户登录
		--stdin		允许通过标准输入修改用户密码，如 echo "NewPassWord" | passwd --stdin Username
		-d 			使该用户可用空密码登录系统
		-e 			强制用户在下次登录时修改密码
		-S 			显示用户的密码是否被锁定，以及密码所采用的加密算法名称
	修改用户自己的密码，以及如何修改其他人的密码
	（修改他人密码时，需要具有 root 管理员权限）：
	[root@linuxprobe ~]# passwd
	Changing password for user root.
	New password:此处输入密码值
	Retype new password:再次输入进行确认
	passwd: all authentication tokens updated successfully.
	[root@linuxprobe ~]# passwd linuxprobe
	Changing password for user linuxprobe.
	New password:此处输入密码值
	Retype new password:再次输入进行确认
	passwd: all authentication tokens updated successfully.
	假设您有位同事正在度假，而且假期很长，那么可以使用 passwd 命令禁止该用户登录系统，
	等假期结束回归工作岗位时，再使用该命令允许用户登录系统，而不是将其删除。
	这样既保证了这段时间内系统的安全，也避免了频繁添加、删除用户带来的麻烦：
	[root@linuxprobe ~]# passwd -l linuxprobe
	Locking password for user linuxprobe.
	passwd: Success
	[root@linuxprobe ~]# passwd -S linuxprobe
	linuxprobe LK 2017-12-26 0 99999 7 -1 (Password locked.)
	[root@linuxprobe ~]# passwd -u linuxprobe
	Unlocking password for user linuxprobe.
	passwd: Success
	[root@linuxprobe ~]# passwd -S linuxprobe
	linuxprobe PS 2017-12-26 0 99999 7 -1 (Password set, SHA512 crypt.)
	
1.6、userdel 命令
	userdel 命令用于删除用户，格式为“userdel [选项] 用户名”。
	如果我们确认某位用户后续不再会登录到系统中，则可以通过 userdel 命令删除该用户的
	所有信息。
	在执行删除操作时，该用户的家目录默认会保留下来，此时可以使用-r 参数将其删除。
	userdel 命令的参数以及作用如表 5-4 所示。
			表 5-4 userdel 命令的参数以及作用
		参数 		作用
		-f 		强制删除用户
		-r 		同时删除用户及用户家目录
	下面使用 userdel 命令将 linuxprobe 用户删除，其操作如下：
	[root@linuxprobe ~]# id linuxprobe
	uid=8888(linuxprobe) gid=1000(linuxprobe) groups=1000(linuxprobe),0(root)
	[root@linuxprobe ~]# userdel -r linuxprobe
	[root@linuxprobe ~]# id linuxprobe
	id: linuxprobe: no such user
	
2、文件权限与归属
		尽管在 Linux 系统中一切都是文件，但是每个文件的类型不尽相同，因此 Linux 系统使
	用了不同的字符来加以区分，常见的字符如下所示。
		➢ -：普通文件。
		➢ d：目录文件。
		➢ l：链接文件。
		➢ b：块设备文件。
		➢ c：字符设备文件。
		➢ p：管道文件。
	在 Linux 系统中，每个文件都有所属的所有者和所有组，并且规定了文件的所有者、
	所有组以及其他人对文件所拥有的可读（r）、可写（w）、可执行（x）等权限。
	对于一般文件来说，权限比较容易理解：“可读”表示能够读取文件的实际内容；
	“可写”表示能够编辑、新增、修改、删除文件的实际内容；
	“可执行”则表示能够运行一个脚本程序。
	但是，对于目录文件来说，理解其权限设置来就不那么容易了。很多资深 Linux 用户其实也没有
	真正搞明白。
	刘遄老师在这里给大家详细讲解一下目录文件的权限设置。
	对目录文件来说，
	“可读”表示能够读取目录内的文件列表；
	“可写”表示能够在目录内新增、删除、重命名文件；
	而“可执行”则表示能够进入该目录。
	文件的读、写、执行权限可以简写为 rwx，亦可分别用数字 4、 2、 1 来表示，
	文件所有者，所属组及其他用户权限之间无关联，如表 5-5 所示。
			表 5-5 文件权限的字符与数字表示
		权限项 		读 	写 	执行 	读 	写 	执行 	读 	 写 	执行
		字符表示 	r 	w 	 x 		r 	w 	 x 		r    w   	x
		数字表示 	4 	2 	 1 		4   2 	 1 		4 	 2 	 	1
	文件权限的数字法表示基于字符表示（rwx）的权限计算而来，其目的是简化权限的表示。
	例如，若某个文件的权限为 7 则代表可读、可写、可执行（4+2+1）；若权限为 6 则代表可读、
	可写（4+2）。我们来看这样一个例子。现在有这样一个文件，其所有者拥有可读、可写、可执
	行的权限，其文件所属组拥有可读、可写的权限；而且其他人只有可读的权限。那么，这个文
	件的权限就是 rwxrw-r--，数字法表示即为 764。不过大家千万别再将这三个数字相加，计算
	出 7+6+4=17 的结果，这是小学的数学加减法，不是 Linux 系统的权限数字表示法，三者之间
	没有互通关系。
	Linux 系统的文件权限相当复杂，但是用途很广泛，建议大家把它彻底搞清楚之后再学习
	下一节的内容。现在来练习一下。请各位读者分别计算数字表示法 764、 642、 153、 731 所对
	应的字符表示法，然后再把 rwxrw-r--、 rw--w--wx、 rw-r--r--转换成数字表示法。
	下面我们利用上文讲解的知识，一起分析下图所示的文件信息。
			通过 ls 命令查看到的文件属性信息
		[root@localhost ~]# ll initial-setup-ks.cfg 
		-rw-r--r--. 1 root root 1264 8月  18 15:06 initial-setup-ks.cfg

	在图中，包含了文件的类型、访问权限、所有者（属主）、所属组（属组）、
	占用的磁盘大小、修改时间和文件名称等信息。
	通过分析可知，该文件的类型为普通文件，所有者权限为可读、可写（rw-），所属组权限为可读（r--），
	除此以外的其他人也只有可读权限（r--），文件的磁盘占用大小是 1264 字节，
	最近一次的修改时间为 8 月 18 日的15:06，文件的名称为 initial-setup-ks.cfg